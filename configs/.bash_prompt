# Custom prompt for bash. Unused since I switched to zsh
# disable the default virtualenv prompt change
export VIRTUAL_ENV_DISABLE_PROMPT=1

# Reset
Reset="\[\e[0m\]"           # Total Reset
Defult="\[\e[39m\]"         # Colour Reset
On_Defult="\[\e[49m\]"      # Background Reset

# Formatting
Bold="\[\e[1m\]"            # Bold
UBold="\[\e[21m\]"          # Undo Bold

# Regualar Colours
Black="\[\e[30m\]"          # Black
Red="\[\e[31m\]"            # Red
Green="\[\e[32m\]"          # Green
Yellow="\[\e[33m\]"         # Yellow
Blue="\[\e[34m\]"           # Blue
Magenta="\[\e[35m\]"        # Magenta
Cyan="\[\e[36m\]"           # Cyan
Grey="\[\e[37m\]"           # Grey

# Light Colours
LGrey="\[\e[0;90m\]"        # Grey
LRed="\[\e[0;91m\]"         # Red
LGreen="\[\e[0;92m\]"       # Green
LYellow="\[\e[0;93m\]"      # Yellow
LBlue="\[\e[0;94m\]"        # Blue
LMagenta="\[\e[0;95m\]"     # Magenta
LCyan="\[\e[0;96m\]"        # Cyan
White="\[\e[0;97m\]"        # White

# Background
On_Black="\[\e[40m\]"       # Black
On_Red="\[\e[41m\]"         # Red
On_Green="\[\e[42m\]"       # Green
On_Yellow="\[\e[43m\]"      # Yellow
On_Blue="\[\e[44m\]"        # Blue
On_Magenta="\[\e[45m\]"     # Magenta
On_Cyan="\[\e[46m\]"        # Cyan
On_Grey="\[\e[47m\]"        # Grey

# Light backgrounds
On_LGrey="\[\e[100m\]"      # Grey
On_LRed="\[\e[101m\]"       # Red
On_LGreen="\[\e[102m\]"     # Green
On_LYellow="\[\e[103m\]"    # Yellow
On_LBlue="\[\e[104m\]"      # Blue
On_LMagenta="\[\e[105m\]"   # Magenta
On_LCyan="\[\e[106m\]"      # Cyan
On_White="\[\e[107m\]"      # White




# timer functions for Prompt
function timer_now {
    date +%s%N
}
function timer_start {
    timer_start=${timer_start:-$(timer_now)}
}

# Create a human readable time stamp
function timer_stop {
    local delta_us=$((($(timer_now) - $timer_start) / 1000))
    local us=$((delta_us % 1000))
    local ms=$(((delta_us / 1000) % 1000))
    local s=$(((delta_us / 1000000) % 60))
    local m=$(((delta_us / 60000000) % 60))
    local h=$((delta_us / 3600000000))
    # Goal: always show around 3 digits of accuracy
    if ((h > 0)); then timer_show=${h}h${m}m
    elif ((m > 0)); then timer_show=${m}m${s}s
    elif ((s >= 10)); then timer_show=${s}.$((ms / 100))s
    elif ((s > 0)); then timer_show=${s}.$(printf %03d $ms)s
    elif ((ms >= 100)); then timer_show=${ms}ms
    elif ((ms > 0)); then timer_show=${ms}.$((us / 100))ms
    else timer_show=${us}us
    fi
    unset timer_start
}


# determine git branch name
function parse_git_branch(){
  # Look for * in output of "git branch"
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'
}

# Determine active Git branch
# Get Python virtualenv details
# Determine if in SSH session
function set_variables () {
  # If a V-env is active get its name after stipping file path
  if test -z "$VIRTUAL_ENV" ; then
      PYTHON_VIRTUALENV=""
  else
      PYTHON_VIRTUALENV="[`basename \"$VIRTUAL_ENV\"`] "
  fi
  # Get git branch name
  GIT_BRANCH=$(parse_git_branch)
  # Warn if in SSH
  if [ -n "$SSH_CLIENT" ]; then
    SSH="SHH"
  else
    SSH=""
  fi
}


# Generate PS1
set_prompt () {
    # Get last commands exit status
    LAST_EXIT=$?
    # Stop the timer
    timer_stop
    # Set Variables
    set_variables

    # Create PS1
    PS1=""

    # Line One
    # Add last programs exit status and execution time
    if [[ $LAST_EXIT == 0 ]]; then
        PS1+="$LGreen\$? ($timer_show)$Reset\n"
    else
        PS1+="$Red\$? ($timer_show)$Reset\n"
    fi

    # Line Two
    # Add the current user and host
    if [[ $EUID == 0 ]]; then
        PS1+="$LRed\\u$Green@\\h$Reset "
    else
        PS1+="$Green\\u@\\h$Reset "
    fi
    # Add the working directory
    PS1+="$LCyan\\w$Reset\n"

    # Line Three
    # Add git branch
    PS1+="$LBlue${GIT_BRANCH}$Reset"
    # Add V-env info
    PS1+="$LRed${PYTHON_VIRTUALENV}$Reset"
    # Add change root info
    PS1+="$Magenta${debian_chroot:+($debian_chroot)}$Reset"
    # Add number of jobs
    PS1+="$LYellow\j jobs,$Reset "
    # Add number of files
    PS1+="$LYellow$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed 's: ::g') files,$Reset "
    # Add folder size
    PS1+="$LYellow$Bold\$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed 's/total //')b$Reset\n"

    # Line Four
    # Add the history number
    PS1+="$LMagenta[\!]"
    # Add SSH identifyer
    PS1+="$Bold$Blue${SSH}"
    # Add prompt marker
    PS1+="$White\\\$$Reset "
}

# don't output when timer starts
trap 'timer_start' DEBUG

# Before PS1 is printed call 'set_prompt'
PROMPT_COMMAND='set_prompt'
